Circadian rhythms in peripheral tissues
========================================================
author: Jake Yeung
date: 5 March 2015
transition: rotate
autosize: true

Introduction
========================================================
type: section

Circadian rhythms underly many physiological processes.
========================================================

![circadian-intro](images/circadian-introduction.jpg)
<sup><a href="#fn2" id="ref2"></a></sup>

<sup id="fn2">The Mammalian Circadian Timing System: Synchronization of Peripheral Clocks. Saini et al 2011<a href="#ref1" title="intro footnote."></a></sup>

Combinatorial action of TFs contribute to tissue-specific transcriptomes
========================================================
incremental: true

![transcription-model](images/transcription-model.pdf)

***

- Which rhythmic genes show oscillations independent of tissue and which are tissue specific?
- How do core clock genes interact with response elements in different tissue contexts to output robust oscillations?
- What medley of transcription factors contribute to tissue-specific circadian rhythms?

Dataset: Zhang et. al 2014 PNAS
=======================================================
incremental: true

- 12h:12h light:dark schedule for 1 week, then constant darkness
- Aorta, adrenal gland, brainstem, brown fat, cerebellum, heart, hypothalamus, kidney, liver, lung and skeletal muscle
- Microarray every 2 hrs, RNA-seq every 6 hrs. 

***

![matrix-representation](images/matrix-representation.pdf)

Results
=======================================================
type: section

```{r prepare-data, echo=FALSE, message = FALSE, warnings = FALSE}
setwd("~/projects/tissue-specificity/")
library(wordcloud)  # for showing text without jumbling
library(combinat)
library(PhaseHSV)
library(doMC)
library(plyr)
library(plotrix)
library(grid)
library(PhaseHSV)  # for colors around the circle

source("~/projects/tissue-specificity/scripts/functions/LoadAndHandleData.R")
source("~/projects/tissue-specificity/scripts/functions/LoadArrayRnaSeq.R")
source("~/projects/tissue-specificity/scripts/functions/PcaPlotFunctions.R")
source("~/projects/tissue-specificity/scripts/functions/FourierFunctions.R")
source("~/projects/tissue-specificity/scripts/functions/SvdFunctions.R")
source("~/projects/tissue-specificity/scripts/functions/PlotFunctions.R")
source("~/projects/tissue-specificity/scripts/functions/GetTopNValues.R")
source("~/projects/tissue-specificity/scripts/functions/OuterComplex.R")
source("~/projects/tissue-specificity/scripts/functions/OrderPhaseMatrix.R")

# mydat <- LoadArrayRnaSeq()  # slow
# save(mydat, file = "~/projects/tissue-specificity/docs/2015-03-05_lab_meeting/robjs/arrayrnaseq.Robj")
load(file = "~/projects/tissue-specificity/docs/2015-03-05_lab_meeting/robjs/arrayrnaseq.Robj")  # mydat
load(file = "~/projects/tissue-specificity/docs/2015-03-05_lab_meeting/robjs/array.WFAT.removed")  # dat.array

jcex <- 2.5
```

Singular value decomposition (SVD)
======================================================
incremental: true

- **Singular value decomposition** to find the principal components.
- Compute eigenvectors and eigenvalues of the covariance matrix.
- Represents projections onto a set of directions that have maximum variance.
- $Y = UDV^{*}$

SVD projects the data onto a new set of vectors
======================================================
$Y = UDV^{*}$

![svd-cartoon](images/svd_example.jpg)
<sup><a href="#fn1" id="ref1"></a></sup>

<sup id="fn1">1. http://smd.princeton.edu/help/svd.shtml<a href="#ref1" title="SVD footnote."></a></sup>

PCA: Explaining much of the variance with fewer components
=======================================================
type: subsection


```{r pca-screeplot, echo=FALSE, fig.width=14, fig.height=14}
# from pca_adjusted_microarray.R
dat_pca <- prcomp(t(dat.array), center=TRUE, scale.=TRUE)

# screeplot(dat_pca, type="lines", npcs = min(100, length(dat_pca$sdev)), log="y", main = "")
npcs <- 100
sdev.norm <- sapply(dat_pca$sdev, function(x) x / sum(dat_pca$sdev))
op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
plot(x = 1:npcs, 
     sdev.norm[1:npcs], 
     type='o', 
     log = "y", 
     main = paste0("Variance of first ", npcs, " components"),
     xlab = paste0("Components (", length(dat_pca$sdev), " total components)"),
     ylab = "Normalized variance (sum=1)",
     cex.lab = jcex,
     cex.main = jcex,
     cex.axis = jcex)

```

Transcriptomes cluster by tissue for PC 1 vs. PC 2
=======================================================
```{r pca-component1v2, echo=FALSE, fig.width=14, fig.height=14}
x_comp <- 1
y_comp <- 2
# Show PCA plot of tissues ----------------------------------------------------  
# 2. 
# Color by tissue
colors.by.tissue <- rep(1:12, each=24)
op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
textplot(dat_pca$x[, x_comp], dat_pca$x[, y_comp], rownames(dat_pca$x), cex=0.7, col=colors.by.tissue, 
         main=paste("Principal Component", x_comp, "and", y_comp),
         xlab = paste("Component", 1),
         ylab = paste("Component", 2),
         cex.lab = jcex,
         cex.main = jcex,
         cex.axis = jcex)
```

PC 1 shows separation between neural tissues
=======================================================
```{r pca-loadings1, echo=FALSE, fig.width=14, fig.height=14}
# get tissue names for text labels in plotloadings
tissue.names.all <- rownames(dat_pca$x)

n.timepts <- 24  # per tissue

# sapply to get unique tissue names from .all
tissue.names <- unique(sapply(tissue.names.all, function(s){
  # get tissue name e.g. Liver34 -> Liver
  t.name <- substr(s, 1, nchar(s) - 2)
  return(t.name)
}
))

# get x and y position of text labels in plot loadings
samp.begins <- seq(1, length(tissue.names.all), n.timepts)  # beginning of each samp
pos.x <- samp.begins + n.timepts / 2
pos.y <- max(dat_pca$x[, x_comp])

op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
PlotLoadings(dat_pca$x[, x_comp], title=paste("Vector Loadings for PC", x_comp), cex = jcex)
text(x = pos.x, y = pos.y, labels = tissue.names, cex = 0.8*jcex)
abline(v = samp.begins[2:length(samp.begins)])  # only between samples necessary for line
```


Rhythms within tissues account for significant variance
=======================================================
```{r rhythmic-loadings, echo=FALSE, fig.width=14, fig.height=14}
# Create response vector, which is loadings
pca_vector <- 14
y <- dat_pca$x[, pca_vector]

# BEGIN: plot periodograms to see which frequency has high activity
freq.and.periodogram <- CalculatePeriodogram(y)  # returns a list
freq <- freq.and.periodogram$freq
periodogram <- freq.and.periodogram$p.scaled
periodogram.unscaled <- freq.and.periodogram$p.unscaled

# Calculate top 5 frequencies
max.freqs <- FindMaxFreqs(freq, periodogram)

op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
PlotLoadings(y, title=paste("Vector Loadings for PCA component:", pca_vector), cex = jcex)
pos.y <- max(y)
text(x = pos.x, y = pos.y, labels = tissue.names, cex = 0.8*jcex)
abline(v = samp.begins[2:length(samp.begins)])  # only between samples necessary for line
```

Spectral analysis shows rhythms are circadian
=======================================================
```{r spectral-analysis, echo=FALSE, fig.width=14, fig.height=14}
op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
PlotPeriodogram(freq, periodogram, title=paste("Periodogram for PCA component:", pca_vector), cex = jcex)
# add vertical line at max frequency
max.f <- max.freqs[1]
# calculate period from frequency
max.T <- (1 / max.f) * 2  # multiply by 2 because samples are every 2 hours 
abline(v=max.f, col='blue', lwd=2)
# add text to show freq and period.
# x offset of +0.02 so you can see the text
text(max.f + 0.02, 0, paste0("T=", signif(max.T, digits=3), "hrs"), cex = jcex)
```


Recap
=======================================================
title: false

We found significant tissue-specific expression and
circadian rhythms contributing to variance across 11 tissues.

* How do circadian rhythms differ across tissues?


Transforming the data to frequency space
=======================================================
type: subsection

![sine_to_complex](images/sine_to_complex.pdf)

- $Y_{gc\omega} = \frac{1}{N} \sum_{t=1}^{T} Y_{gct} \exp{(-i \omega t)}$

- **Large magnitudes represent strong circadian rhythms**

***

![project_to_frequency](images/project_to_frequency.pdf)

Eigenvalues of SVD decomposition
===================================================

```{r project-to-frequency, echo=FALSE, message=FALSE, warnings=FALSE}
# uncomment to run, otherwise just load from file
# # split for parallel processing
# dat.split <- split(mydat, mydat$tissue)
# # remove WFAT because it sucks
# dat.split$WFAT <- NULL
# 
# omega <- 2 * pi / 24
# omegas <- GetOmegas()
# 
# start.time <- Sys.time()
# if (getDoParWorkers() == 1){
#   registerDoMC(40)
# }
# dat.split.proj <- lapply(dat.split, function(x){
#   ddply(x, .(gene), ProjectToFrequency, my.omega = omega, normalize = FALSE, rhythmic.only = FALSE, pval.cutoff = 1, .parallel = TRUE)
# })
# save(dat.split.proj, file = "~/projects/tissue-specificity/docs/2015-03-05_lab_meeting/robjs/dat_projected.Robj")
load(file = "~/projects/tissue-specificity/docs/2015-03-05_lab_meeting/robjs/dat_projected.Robj")

# Add tissue information into each list -----------------------------------

for (tissue in names(dat.split.proj)){
  dat.split.proj[[tissue]]$tissue <- tissue
}

# Combine data ------------------------------------------------------------

dat.proj <- do.call(rbind, dat.split.proj)

# long to wide conversion
dat.wide <- ConvertLongToWide(dat.proj, measurement.var = "exprs.transformed")

# Complete cases only. This removes NaN rows.
dat.wide <- dat.wide[complete.cases(dat.wide), ]

# Rotate my shit
rotate <- complex(modulus = 1, argument = (18 * 2 * pi) / 24) 
dat.wide <- dat.wide * rotate 

s <- svd(dat.wide)

# Set rownames for u and v ------------------------------------------------

rownames(s$u) <- rownames(dat.wide)
rownames(s$v) <- colnames(dat.wide)
```


```{r screeplot-svd, echo=FALSE, fig.width=14, fig.height=14}
# ScreePlot
plot(s$d^2 / sum(s$d ^ 2), type='o',
     main = "Eigenvalues from SVD decomposition",
     ylab = "Normalized eigenvalue squared",
     xlab = "Index",
     cex.axis = jcex,
     cex.main = jcex,
     cex.lab = jcex)  # Manual screeplot 
```

SVD approach shows organism-wide circadian rhythms
====================================================

```{r core-clock-components, echo=FALSE, fig.width=14, fig.height=14}
sing.val <- 1
eigengene <- s$v[, sing.val]
jmax <- max(Mod(eigengene))
max.loading <- names(eigengene[which(Mod(eigengene) == jmax)])
jmax.arg <- Arg(eigengene[max.loading])
jmax.arg <- (jmax.arg * (24 / (2 * pi))) %% 24
PlotComplexCircle(eigengene, jlabels = names(eigengene), rotate = -jmax.arg,
                  ylabel=("Phase (relative to BFAT)"))
```

Gene loadings show circadian genes
====================================================

```{r core-clock-loadings, echo=FALSE, fig.width=14, fig.height=14}
sing.val <- 1
eigensample <- s$u[, sing.val]
jmax <- max(Mod(eigensample))
PlotComplexCircle(eigensample, jlabels = names(eigensample), rotate = jmax.arg,
                  ylabel=("Phase (CT)"),
                  filter = 0.5 * jmax)
```

Phase of genes in component 1 are largely independent of tissues
===================================================
left: 75%
```{r core-clock-heatmap, echo=FALSE, fig.width=14, fig.height=10}
# Plot args in colori
sing.val <- 1
top.genes <- GetTopNValues(Mod(eigensample), N = 100)# list of $vals $i
# use drop to keep rownames
outer.prod.mat <- s$d[sing.val] * OuterComplex(s$u[top.genes$i, sing.val, drop = FALSE], t(s$v[, sing.val, drop = FALSE]))
# # rotate by 12 hours (pi)
rotate <- complex(modulus = 1, argument = pi / 2)
outer.prod.mat <- Conj(outer.prod.mat)
outer.prod.mat <- outer.prod.mat * rotate

outer.prod.mat <- OrderPhaseMatrix(outer.prod.mat, order.by = max.loading, order.tissues = TRUE)

# do the conjugate to flip it around 
PlotArgsMatrix(outer.prod.mat, main = bquote(.('Phase angles of') ~ U[1] %*% V[1]), jcex = jcex)
```

***

```{r color-legend, echo=FALSE, fig.width=7, fig.height=7}
vec <- complex(length.out = 4, argument = seq(-pi, pi, 0.01))
plot.colors <- hsv(h=PhaseToHsv(Arg(vec), -pi, pi), s=1, v=1)
plot(0, type = "n", asp=1,
     xlab="Real",
     ylab="Complex",
     xlim=c(-0.25, 0.25),
     ylim=c(-1.20, 1.20))
points(vec, col=plot.colors)
text(x = c(0, 1.2, 0, -1.2), y = c(1.2, 0, -1.2, 0), labels = c("0h", "6h", "12h", "18h"), cex=3)
abline(v=0)
abline(h=0)
```


Projecting to frequency space delineates tissue-independent and tissue-specific modules
====================================================
incremental: true

- SVD decomposition of projected matrix identifies core clock modules
- Overall, SVD approach provides a broad overview of rhythmicity in tissues

**Question**: can we identify modules of rhythmic genes regulated in a tissue-specific manner?


Model selection using Cedric's model
===================================================
- 7 tissues (BFAT, Liver, Adrenal gland, Aorta, Lung, Kidney, Muscle)
- BIC weight cut-off of 0.2 $\frac{w_{i}}{\sum_{j=1}^{M} w_j}$
- **Strategy**: Identify groups of genes with similar rhythmic behaviour across tissues

Model selection approach identifies tissue-specific rhythms
===================================================
<div align="center">
<img src="images/adr_liver_specific.pdf" width=700 height=1100>
</div>
***
<div align="center">
<img src="images/adr_liver_phase.pdf" width=700 height=400>
</div>

Plot an example of a gene in this model
==================================================
Plot of expression for a gene across tissues showing Adr-Liver
specificity. 

GREAT analysis shows enrichment of metabolism-specific processes
=================================================
<div align="left">
<img src="images/great_figures/models26_bp.pdf" width=2000 height=700>
</div>

GREAT analysis identifies potential regulators
=================================================
<div align="left">
<img src="images/great_figures/model26_perturbation.pdf" width=2500 height=400>
</div>

Motif of HNF4A enriched in promoter regions
=================================================
<div align="left">
<img src="images/great_figures/models26_motifs.pdf" width=2000 height=225>
</div>

Model selection approach identifies BFAT-specific rhythms
===================================================
<div align="left">
<img src="images/bfat_specific_model.pdf" width=700 height=1100>
</div>
***
<div align="left">
<img src="images/bfat_specific_phase.pdf" width=700 height=400>
</div>

Plot an example of a BFAT-specific gene
===================================================
Example here Hspb6

BFAT-specific genes associated with muscle-related phenotypes
===================================================
<div align="left">
<img src="images/great_figures/model4_phenotype.pdf" width=2000 height=700>
</div>

SRF is a potential regulator of BFAT-specific rhythms
===================================================
<div align="left">
<img src="images/great_figures/model4_motifs.pdf" width=2000 height=225>
</div>

Show Schibler's paper.

SRF is required for muscle growth.

Preliminary results of regulatory modules using genome-wide models
===================================================
Show ridge regression and lasso plots.

Discussion and future work
===================================================
type: section

Discussion
==================================================
type: subsection

- Projecting to frequency space identifies core and peripheral clock modules
- Bayesian model selection approach delineates peripheral clock modules into tissue-specific rhythms
- Potential regulators of tissue-specific rhythms associate with relevant biological function and phenotypes

Future work
==================================================
type: subsection

- Use a principled approach to identify players regulating gene expression
- Identify interactions between rhythmic regulators and tissue-specific regulators

Acknowledgements
=================================================
type: section

- Felix Naef
- Saeed Omidi
- Jingkui Wang
- Cedric Gobet
- Jonathan Sobel
- Jonathan Bieler
- Kyle Gustafson
- Gianrocco Lazzari


WFAT rhythms do not seem real
====================================================
Show image here to convince the doubters


Tissues cluster by time of day in rhythmic components
=======================================================
```{r limit-cycle, echo=FALSE, fig.width=14, fig.height=14}
t <- rep(seq(0, 22, 2), 2)  # for one tissue
time.cols <- hsv(PhaseToHsv(2 * pi * t/ 24, 0, 2 *pi), s=1, v=1)
tissue <- "Kidney"
x_comp <- 14
y_comp <- 20
t <- rep(seq(1, 12), 2)  # 12 samples repeated twice

op <- par(mar = c(5,6,4,2) + 0.1) ## default is c(5,4,4,2) + 0.1
plot(dat_pca$x[grepl(tissue, rownames(dat_pca$x)), x_comp], 
     dat_pca$x[grepl(tissue, rownames(dat_pca$x)), y_comp], 
     cex = 0.7, col = "black", 
     main=paste(tissue, "Component", x_comp, "vs", y_comp),
     xlab = paste("Component", x_comp),
     ylab = paste("Component", y_comp),
     cex.main = jcex,
     cex.axis = jcex,
     cex.lab = jcex)
text(dat_pca$x[grepl(tissue, rownames(dat_pca$x)), x_comp],
     dat_pca$x[grepl(tissue, rownames(dat_pca$x)), y_comp],
     rownames(dat_pca$x)[which(grepl(tissue, rownames(dat_pca$x)))],
     col = time.cols,
     cex.main = jcex,
     cex.axis = jcex,
     cex.lab = jcex)
```

Transforming the data to frequency space
=======================================================

$$
\begin{aligned}
Y_{gc\omega} = \frac{1}{N} \sum_{t=1}^{T} Y_{gct} \exp{(-i \omega t)}
\end{aligned}
$$

$Y_{gc\omega=\frac{2\pi}{24}}$ represents amplitude and phase angle 
$$
\begin{aligned}
Y_{gc\omega=\frac{2\pi}{24}} = \frac{1}{N} \sum_{t=1}^{T} Y_{gct} \exp{(-i \omega t) = Ae^{i\phi}}
\end{aligned}
$$

**Strategy**: identify "modules" representing circadian rhythms across tissues.

Simple case: the mean
=======================================================
$Y_{gc\omega=0}$ represents mean across a condition
$$
\begin{aligned}
Y_{gc\omega=0} = \frac{1}{N} \sum_{t=1}^{T} Y_{gct}
\end{aligned}
$$

Assessing amplitude across tissues
=====================================================
By projecting to frequency space, we can easily 
measure the amplitude across tissues at a certain
$\omega$.

Singular value decomposition (SVD) in frequency space
======================================================
$$
Y = UDV^{*}
$$

- U and V are complex unitary matrices. 

- Let's call U **eigensamples** (samples are mixtures of them)

- Let's call V **eigengenes** (genes are mixtures of them)

- D is a diagonal matrix with eigenvalues in the diagonal

- Low-rank representation of the original matrix by taking the outer product of columns of U and V multiplied by D.


SVD modules suggest tissue-specific circadian rhythms
===================================================
```{r tissue-modules, echo=FALSE, fig.width=14, fig.height=14}
sing.val <- 2
eigengene <- Conj(s$v[, sing.val])

jmax <- max(Mod(eigengene))
max.loading <- names(eigengene[which(Mod(eigengene) == jmax)])
jmax.arg <- Arg(eigengene[max.loading])  # aligns everything relative to jmax.arg
shift.to.18 <- -pi # Arg = 0 corresponds to CT18

PlotComplex(eigengene,  # negative so it goes around like a clock 
            axis.min = -jmax,
            axis.max = jmax,
            labels = names(eigengene), 
            col = "HSV",
            add.text.plot = FALSE, 
            main = paste("Component:", sing.val),
            jpch = 20,
            threshold = 0, 
            rotate = -jmax.arg + shift.to.18,
            jcex = jcex)
```

